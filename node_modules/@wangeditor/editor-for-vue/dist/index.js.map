{"version":3,"file":"index.js","sources":["../src/utils/editor-map.ts","../src/utils/create-info.ts","../node_modules/eventemitter3/index.js","../src/utils/emitter.ts","../plugin-vue:export-helper","../src/components/Editor.vue","../src/components/Toolbar.vue"],"sourcesContent":["/**\n * @description 根据 editorId 存储 editor\n * @author wangfupeng\n */\n\nimport { IDomEditor } from '@wangeditor/editor';\n\nconst EDITOR_MAP: { [key: string]: IDomEditor } = {};\n\nexport function recordEditor(editorId: string, editor: IDomEditor) {\n  EDITOR_MAP[editorId] = editor;\n}\n\nexport function getEditor(editorId: string): IDomEditor | null {\n  return EDITOR_MAP[editorId] || null;\n}\n\nexport function removeEditor(editorId: string) {\n  delete EDITOR_MAP[editorId];\n}\n","/**\n * @description 错误提示信息\n * @author liuqh\n */\nexport function genErrorInfo(fnName: string): string {\n  let info = `请使用 '@${fnName}' 事件，不要放在 props 中`\n  info += `\\nPlease use '@${fnName}' event instead of props`\n  return info\n}","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * @description event emitter\n * @author liuqh\n */\n\nimport ee from 'eventemitter3'\n\nconst emitter = new ee()\n\nexport default emitter\n","\nexport default (sfc, props) => {\n  for (const [key, val] of props) {\n    sfc[key] = val\n  }\n  return sfc\n}\n","<template>\n  <div ref=\"box\" style=\"height: 100%\"></div>\n</template>\n\n<script lang=\"ts\">\nimport { onMounted, defineComponent, ref, PropType, onUnmounted } from \"vue\";\nimport { createEditor, IEditorConfig } from \"@wangeditor/editor\";\nimport { Descendant } from \"slate\";\nimport { getEditor, recordEditor, removeEditor } from \"../utils/editor-map\";\nimport { genErrorInfo } from \"../utils/create-info\";\nimport emitter from \"../utils/emitter\";\n\nexport default defineComponent({\n  props: {\n    /** 编辑器默认ID */\n    editorId: {\n      type: String,\n      required: true,\n    },\n    /** 编辑器模式 */\n    mode: {\n      type: String,\n      default: \"default\",\n    },\n    /** 编辑器默认内容 */\n    defaultContent: {\n      type: Array as PropType<Descendant[]>,\n      default: [],\n    },\n    defaultHtml: {\n      type: String,\n      default: '',\n    },\n    /** 编辑器默认配置 */\n    defaultConfig: {\n      type: Object as PropType<Partial<IEditorConfig>>,\n      default: {},\n    },\n  },\n  created() {\n    // 检查用户是否传入了editorId\n    if (this.editorId == null) {\n      throw new Error(\"Need `editorId` props when create <Editor/> component\");\n    }\n  },\n  setup(props, context) {\n    // 编辑器容器\n    const box = ref(null);\n    /**\n     * 初始化编辑器\n     */\n    const initEditor = () => {\n      if (!box.value) return;\n\n      createEditor({\n        selector: box.value! as Element,\n        mode: props.mode,\n        content: props.defaultContent || [],\n        html: props.defaultHtml || '',\n        config: {\n          ...props.defaultConfig,\n          onCreated(editor) {\n            // 记录 editor\n            recordEditor(props.editorId, editor);\n            // 触发自定义事件（如创建 toolbar）\n            emitter.emit(`w-e-created-${props.editorId}`, editor);\n            context.emit(\"onCreated\", editor);\n\n            if (props.defaultConfig.onCreated) {\n              const info = genErrorInfo(\"onCreated\");\n              throw new Error(info);\n            }\n          },\n          onChange(editor) {\n            context.emit(\"onChange\", editor);\n            if (props.defaultConfig.onChange) {\n              const info = genErrorInfo(\"onChange\");\n              throw new Error(info);\n            }\n          },\n          onDestroyed(editor) {\n            context.emit(\"onDestroyed\", editor);\n            if (props.defaultConfig.onDestroyed) {\n              const info = genErrorInfo(\"onDestroyed\");\n              throw new Error(info);\n            }\n          },\n          onMaxLength(editor) {\n            context.emit(\"onMaxLength\", editor);\n            if (props.defaultConfig.onMaxLength) {\n              const info = genErrorInfo(\"onMaxLength\");\n              throw new Error(info);\n            }\n          },\n          onFocus(editor) {\n            context.emit(\"onFocus\", editor);\n            if (props.defaultConfig.onFocus) {\n              const info = genErrorInfo(\"onFocus\");\n              throw new Error(info);\n            }\n          },\n          onBlur(editor) {\n            context.emit(\"onBlur\", editor);\n            if (props.defaultConfig.onBlur) {\n              const info = genErrorInfo(\"onBlur\");\n              throw new Error(info);\n            }\n          },\n          customAlert(info, type) {\n            context.emit(\"customAlert\", info, type);\n            // @ts-ignore\n            if (props.defaultConfig.customAlert) {\n              const info = genErrorInfo(\"customAlert\");\n              throw new Error(info);\n            }\n          },\n          customPaste: (editor, event): any => {\n            if (props.defaultConfig.customPaste) {\n              const info = genErrorInfo(\"customPaste\");\n              throw new Error(info);\n            }\n            let res;\n            context.emit(\"customPaste\", editor, event, (val: boolean) => {\n              res = val;\n            });\n            return res;\n          },\n        },\n      });\n    };\n    /**\n     * 元素挂在后初始化编辑器\n     */\n    onMounted(() => {\n      initEditor();\n    });\n\n    onUnmounted(() => {\n      const editor = getEditor(props.editorId);\n      if (editor == null) return;\n      // 销毁，并移除 editor\n      editor.destroy();\n      removeEditor(props.editorId);\n    });\n\n    return {\n      box,\n    };\n  },\n});\n</script>\n","<template>\n  <div ref=\"selector\" classname=\"w-e-toolbar-init\"></div>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  ref,\n  onUnmounted,\n  PropType,\n  onBeforeMount,\n} from \"vue\";\nimport { createToolbar, IDomEditor, IToolbarConfig } from \"@wangeditor/editor\";\nimport emitter from \"../utils/emitter\";\nimport { getEditor } from \"../utils/editor-map\";\n\nexport default defineComponent({\n  props: {\n    /** 编辑器默认ID */\n    editorId: {\n      type: String,\n      required: true,\n    },\n    /** 编辑器模式 */\n    mode: {\n      type: String,\n      default: \"default\",\n    },\n    /** 编辑器默认配置 */\n    defaultConfig: {\n      type: Object as PropType<Partial<IToolbarConfig>>,\n      default: {},\n    },\n  },\n  setup(props) {\n    // 编辑器容器\n    const selector = ref(null);\n    /**\n     * 初始化编辑器\n     */\n    const initToolbar = (editor: IDomEditor) => {\n      if (!selector.value) return;\n      editor = editor || getEditor(props.editorId);\n      if (editor == null) {\n        throw new Error(\n          \"Not found instance of Editor when create <Toolbar/> component\"\n        );\n      }\n      createToolbar({\n        editor,\n        selector: (selector.value! as Element) || \"<div></div>\",\n        mode: props.mode,\n        config: props.defaultConfig,\n      });\n    };\n\n    onBeforeMount(() => {\n      emitter.on(`w-e-created-${props.editorId}`, (editor) => {\n        initToolbar(editor);\n      });\n    });\n\n    onUnmounted(() => {\n      emitter.off(`w-e-created-${props.editorId}`, initToolbar);\n    });\n\n    return {\n      selector,\n    };\n  },\n});\n</script>\n"],"names":["_sfc_main","defineComponent","ref","_hoisted_1","editor"],"mappings":"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"}