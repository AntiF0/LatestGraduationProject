{"version":3,"sources":["getFileType.js"],"names":["getFileNameAndExtension","require","mimeTypes","module","exports","getFileType","file","type","fileExtension","name","extension","toLowerCase"],"mappings":";;AAAA,MAAMA,uBAAuB,GAAGC,OAAO,CAAC,2BAAD,CAAvC;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAsBC,IAAtB,EAA4B;AAAA;;AAC3C,MAAIA,IAAI,CAACC,IAAT,EAAe,OAAOD,IAAI,CAACC,IAAZ;AAEf,QAAMC,aAAa,GAAGF,IAAI,CAACG,IAAL,4BAAYT,uBAAuB,CAACM,IAAI,CAACG,IAAN,CAAvB,CAAmCC,SAA/C,qBAAY,sBAA8CC,WAA9C,EAAZ,GAA0E,IAAhG;;AACA,MAAIH,aAAa,IAAIA,aAAa,IAAIN,SAAtC,EAAiD;AAC/C;AACA,WAAOA,SAAS,CAACM,aAAD,CAAhB;AACD,GAP0C,CAQ3C;;;AACA,SAAO,0BAAP;AACD,CAVD","sourcesContent":["const getFileNameAndExtension = require('./getFileNameAndExtension')\nconst mimeTypes = require('./mimeTypes')\n\nmodule.exports = function getFileType (file) {\n  if (file.type) return file.type\n\n  const fileExtension = file.name ? getFileNameAndExtension(file.name).extension?.toLowerCase() : null\n  if (fileExtension && fileExtension in mimeTypes) {\n    // else, see if we can map extension to a mime type\n    return mimeTypes[fileExtension]\n  }\n  // if all fails, fall back to a generic byte stream type\n  return 'application/octet-stream'\n}\n"]}